{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { EditemployeeComponent } from './editemployee/editemployee.component';\nimport { AddemployeeComponent } from './addemployee/addemployee.component';\nimport { AuthguardserviceService } from './authguardservice.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: \"\",\n  component: LoginComponent\n}, {\n  path: 'employeeform',\n  component: AddemployeeComponent\n}, {\n  path: 'user',\n  component: HomeComponent\n}, {\n  path: \"edit/:id\",\n  component: EditemployeeComponent\n}, {\n  path: \"home\",\n  canActivate: [() => {\n    const auth = inject(AuthguardserviceService);\n    return auth.loggedIn();\n  }],\n  component: AdminComponent\n}];\nexport class AppRoutingModule {}\nAppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n  return new (t || AppRoutingModule)();\n};\nAppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppRoutingModule\n});\nAppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [RouterModule.forRoot(routes), RouterModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","LoginComponent","HomeComponent","AdminComponent","EditemployeeComponent","AddemployeeComponent","AuthguardserviceService","routes","path","component","canActivate","auth","inject","loggedIn","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["C:\\Users\\ATHIRA\\Desktop\\kkemmar2023\\Employee_MEAN\\Frontend\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { Component, NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EmployeeformComponent} from './employeeform/employeeform.component';\nimport { EmployeelistComponent } from './employeelist/employeelist.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { EditemployeeComponent } from './editemployee/editemployee.component';\nimport { AddemployeeComponent } from './addemployee/addemployee.component';\nimport { AuthserviceService } from './authservice.service';\nimport { AuthguardserviceService } from './authguardservice.service';\n\nconst routes: Routes = [{path:\"\", component:LoginComponent},\n{path:'employeeform',component:AddemployeeComponent},\n{path:'user',component:HomeComponent},\n{path:\"edit/:id\",component:EditemployeeComponent},\n{path:\"home\",canActivate:[()=>{\n  const auth = inject(AuthguardserviceService);\n  return auth.loggedIn();}],component:AdminComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AAGtD,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,qBAAqB,QAAQ,uCAAuC;AAC7E,SAASC,oBAAoB,QAAQ,qCAAqC;AAE1E,SAASC,uBAAuB,QAAQ,4BAA4B;;;AAEpE,MAAMC,MAAM,GAAW,CAAC;EAACC,IAAI,EAAC,EAAE;EAAEC,SAAS,EAACR;AAAc,CAAC,EAC3D;EAACO,IAAI,EAAC,cAAc;EAACC,SAAS,EAACJ;AAAoB,CAAC,EACpD;EAACG,IAAI,EAAC,MAAM;EAACC,SAAS,EAACP;AAAa,CAAC,EACrC;EAACM,IAAI,EAAC,UAAU;EAACC,SAAS,EAACL;AAAqB,CAAC,EACjD;EAACI,IAAI,EAAC,MAAM;EAACE,WAAW,EAAC,CAAC,MAAI;IAC5B,MAAMC,IAAI,GAAGC,MAAM,CAACN,uBAAuB,CAAC;IAC5C,OAAOK,IAAI,CAACE,QAAQ,EAAE;EAAC,CAAC,CAAC;EAACJ,SAAS,EAACN;AAAc,CAAC,CACpD;AAMD,OAAM,MAAOW,gBAAgB;AAAhBA,gBAAgB,C;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB,C;QAAhBA;AAAgB;AAAhBA,gBAAgB,C;YAHjBd,YAAY,CAACe,OAAO,CAACR,MAAM,CAAC,EAC5BP,YAAY;AAAA;;2EAEXc,gBAAgB;IAAAE,OAAA,GAAAC,EAAA,CAAAjB,YAAA;IAAAkB,OAAA,GAFjBlB,YAAY;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}