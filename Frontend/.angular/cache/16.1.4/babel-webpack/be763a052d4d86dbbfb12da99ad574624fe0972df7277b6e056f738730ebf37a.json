{"ast":null,"code":"// import { Injectable } from '@angular/core';\nimport { __decorate } from \"tslib\";\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class AuthguardserviceService {\n//   constructor() { }\n//   loggedIn():boolean{\n//     const adminloggedin = !!localStorage.getItem('token') && localStorage.getItem('role')===\"admin\";\n//     if(localStorage.getItem('role')===\"user\"){\n//       alert(\"Access Denied\")\n//     }\n//     return adminloggedin\n//   }\n// }\nimport { Injectable } from '@angular/core';\nexport let AuthGuard = class AuthGuard {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  canActivate(route, state) {\n    return this.authService.loggedIn();\n  }\n};\nAuthGuard = __decorate([Injectable()], AuthGuard);","map":{"version":3,"names":["Injectable","AuthGuard","constructor","authService","canActivate","route","state","loggedIn","__decorate"],"sources":["C:\\Users\\ATHIRA\\Desktop\\kkemmar2023\\Employee_MEAN\\Frontend\\src\\app\\authguardservice.service.ts"],"sourcesContent":["// import { Injectable } from '@angular/core';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class AuthguardserviceService {\n\n//   constructor() { }\n//   loggedIn():boolean{\n//     const adminloggedin = !!localStorage.getItem('token') && localStorage.getItem('role')===\"admin\";\n//     if(localStorage.getItem('role')===\"user\"){\n//       alert(\"Access Denied\")\n//     }\n//     return adminloggedin\n//   }\n// }\nimport { Injectable } from '@angular/core';\nimport { CanActivate, RouterStateSnapshot, ActivatedRouteSnapshot, UrlTree } from '@angular/router';\nimport { AuthguardserviceService } from './authguardservice.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthguardserviceService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree {\n    return this.authService.loggedIn();\n  }\n}\n\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAU,QAAQ,eAAe;AAKnC,WAAMC,SAAS,GAAf,MAAMA,SAAS;EACpBC,YAAoBC,WAAoC;IAApC,KAAAA,WAAW,GAAXA,WAAW;EAA4B;EAE3DC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IACnE,OAAO,IAAI,CAACH,WAAW,CAACI,QAAQ,EAAE;EACpC;CACD;AANYN,SAAS,GAAAO,UAAA,EADrBR,UAAU,EAAE,C,EACAC,SAAS,CAMrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}